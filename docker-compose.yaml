services:
  train-dev:
      build: ./
      volumes:
        - .:/workspace:cached
        - mlruns:/mlflow/mlruns # don't use ./mlruns... -> is lokaal filesysteem! maar mlruns:/... This way, any artifact logging (like .pkl files) will persist and be accessible through the MLflow UI.
      ports:
        - "4201:4200"
      environment:
        - PREFECT_API_URL=http://prefect-server:4200/api
        - MLFLOW_TRACKING_URI=http://mlflow:5000
      command: sleep infinity
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./webapp:/app
      - mlruns:/mlflow/mlruns
    depends_on:
      - mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.11.1
    ports:
      - "5001:5000"
    volumes:
      - mlruns:/mlflow/mlruns
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - BACKEND_STORE_URI=sqlite:///mlflow.db
      - ARTIFACT_ROOT=/mlflow/mlruns
    command: mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/mlruns --host 0.0.0.0

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: prefect
      POSTGRES_DB: prefect
    ports:
      - "5432:5432"

  prefect-server:
    image: prefecthq/prefect:3.4.2-python3.12-conda
    environment:
      - PREFECT_UI_ENABLED=true
    ports:
      - "4200:4200"
    command: prefect server start --host 0.0.0.0
    depends_on:
      - postgres

  prefect-agent:
    image: prefecthq/prefect:3.4.2-python3.12-conda
    environment:
        - PREFECT_API_URL=http://prefect-server:4200/api
    depends_on:
      - prefect-server
    command: prefect worker start --pool default-agent-pool


  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   depends_on:
  #     - prometheus

volumes:
  mlruns:
# grafana-data:
